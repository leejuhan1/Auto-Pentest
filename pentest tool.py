import os
import re
import paramiko     # python에서 사용하는 ssh 패키지
import ftplib       # python에서 사용하는 ftp 패키지

#********** 파일이름 입력!! **********

file_name = "test123.txt"

#************************************


#### nmap 파일 오픈 ####
nmap_open = open(file_name,"r")

ssh_ip_list=[]  # ssh가 열려있는 ip 리스트
ftp_ip_list=[]  # ftp가 열려있는 ip 리스트
smb_ip_list=[]  # smb가 열려있는 ip 리스트

ssh_result = [] # ssh 디폴트 계정 접근 결과
ftp_result = [] # ftp 디폴트 계정 접근 결과
smb_result = [] # smb 취약점 존재 유무 결과
allresult = [ssh_result,ftp_result]

gubun = ["ssh","ftp","microsoft-ds"]

id_list = ['root','admin']
ftp_id_list = ['anonymous','root','admin']
pw_list = ['root','admin']


before_ip = 1   # 결과 txt 깔끔하게 하려고 넣은 변수


#### 각 포트가 존재하는 ip 리스트 생성 ####
for line in nmap_open:
    ip_find = re.search('(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}',line)
    
    if(ip_find):
        now_ip = ip_find.group()    # ip만 뽑아서 저장
    
    #### ssh
    if(line.find(gubun[0])>0):     # ssh 문구가 존재한다 = ssh가 열려있다
        if(line.find("closed")<=0 and line.find("filtered")<=0):    # open 되어 있는 ip만 필터링
            ssh_ip_list.append(now_ip)

    #### ftp
    if(line.find(gubun[1])>0):
        if(line.find("closed")<=0 and line.find("filtered")<=0):
            ftp_ip_list.append(now_ip)

    #### smb
    if(line.find(gubun[2])>0):
        if(line.find("closed")<=0 and line.find("filtered")<=0):
            smb_ip_list.append(now_ip)



#### ssh 디폴트 로그인 확인 ####
for line in ssh_ip_list:
    for line2 in id_list:
        for line3 in pw_list:
            try:
                if(before_ip != line and before_ip != 1):
                    ssh_result.append(" ")
                before_ip = line
                ssh_result.append(line)
                ssh_result.append(line2+"/"+line3)
                ssh = paramiko.SSHClient()
                ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
                ssh.connect(line, port='22', username=line2, password=line3)
                ssh_result.append('true')
                
            except:
                ssh_result.append('false')       
                #print("error!!")



#### ftp 디폴트 로그인 확인 ####
for line in ftp_ip_list:
    for line2 in ftp_id_list:
        for line3 in pw_list:
            try:
                if(before_ip != line and before_ip != 1):
                    ftp_result.append(" ")
                before_ip = line
                ftp_result.append(line)
                if (line2 == "anonymous"):
                    ftp_result.append(line2)
                else:
                    ftp_result.append(line2+"/"+line3)
                ftp = ftplib.FTP()
                ftp.connect(host=line, timeout=100)
                ftp.login(user=line2, passwd=line3)
                ftp_result.append('true')
                if (line2 == "anonymous"):
                    break      
            except:
                ftp_result.append('false') 
                if (line2 == "anonymous"):
                    break  


#### smb 취약점 존재 확인 ####
for line in smb_ip_list:
    command = "nmap --script smb-vuln* -p 445 "+line
    process = os.popen(command)
    results = str(process.read())

    if(len(results)>500):
        if(results.find("VULNERABLE")>0):
            smb_result.append(line+" : "+str(len(results))+" - VULNERABLE!!")
        else:
            smb_result.append(line+" : "+str(len(results))+" - ?")


#### 결과 파일 만들기 ####
enter = 1
result = 0

with open('pentest_result.txt', 'w') as f:
    for line in gubun:
        f.write('\n\n##### '+line+' result #####\n')
        if(line != "microsoft-ds"):
            for line2 in allresult[result]:
                if(line2 == " "):
                    f.write("\n")
                    continue
                if(enter == 3):
                    f.write("\t\t"+line2+" \n")
                    enter = 1
                else:
                    f.write(line2+" ")
                    enter = enter + 1
            result = result + 1
        else:
            for line3 in smb_result:
                f.write(line3+"\n")
       

#print(ftp_result)

#### ssh 닫기 ####
ssh.close()

#### ssh 닫기 ####
ftp.close()

#### nmap 파일 닫기 ####
nmap_open.close()
print("################ END #################")

# NameError: name 'ssh' is not defined = 파일안에 ssh가 없다
